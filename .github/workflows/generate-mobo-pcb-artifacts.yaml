name: generate-mobo-pcb-artifacts

on:
  release:
    types: [ published ]  
  workflow_dispatch:
    
#env:
# key: value

jobs:
  generate-artifacts:
    runs-on: ubuntu-latest
    container: setsoft/kicad_auto:dev_k6
      
    steps:
    - name: Update system repositories, Install Required Libraries and Initialize git-lfs
      run: |
        apt update
        apt -y install git zip

    - name: Checkout Repository
      uses: actions/checkout@v2
        
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch            

    - name: Update the PCBs with on default branch with git hash
      if: github.event_name == 'release' || steps.extract_branch.outputs.branch == env.main_branch
      run: |
        export COMMIT=$(git rev-parse --short HEAD)
        echo "COMMIT = ${COMMIT}"    
        echo "ref: ${{ github.ref }}"
        echo "default: ${{ env.default }}"
        sed -i "s!<<hash>>!${COMMIT}!" pnp/pcb/mobo/mobo.kicad_pcb

    - name: Prepare pnp mobo Artifacts
      run: |
        cd pnp/pcb/mobo
        rm -rf export/
        kibot -c ../../../config-4layer.kibot.yaml -e mobo.kicad_sch -b mobo.kicad_pcb -d export

    # Splitting this out to ensure a failed kibot run will mark a check as failed.
    - name: Prepare pnp mobo Gerber Artifact
      run: |
        cd pnp/pcb/mobo/export/gerbers
        zip -r -j ../pnp_mobo_gerbers.zip *
        
    - name: Prepare Output Artifact
      if: github.event_name == 'release'    
      run: |
        cd pnp/pcb/mobo/export/
        zip -r -j ../pnp_mobo_files.zip *

    - name: upload pnp artifacts
      uses: actions/upload-artifact@v2
      with:
        name: pnp_mobo_output
        path: pnp/pcb/mobo/export

    - name: Upload Artifacts to Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          pnp/pcb/mobo/pnp_mobo_files.zip
